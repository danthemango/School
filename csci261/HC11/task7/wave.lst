M68HC11 GAS  wave.s 			page 1


   1                 	;============================================-=
   2                 	; File:
   3                 	       .file "wave.s" 
   4                 	; Behaviour: 
   5                 	; a HC11 assembly language program that produces a 30% duty cycle
   6                 	; square wave on PA6, using interrupts
   7                 	; Assumptions:
   8                 	;      none
   9                 	; Board:
  10                 	;      CME11-E9-EVBU
  11                 	; Author/Date:
  12                 	;      Peter Walsh Feb 2001
  13                 	;      revised Feb 2002
  14                 	;      Modified by Daniel Guenther on 2016-03-11
  15                 	;        to make the wave functions run as interrupts
  16                 	;==========================================-=
  17                 	
  18                 	;----------------------------------------------
  19                 	;            Text Section (code)
  20                 	;----------------------------------------------
  21                 	.sect .text 
  22                 	.global _start
  23                 	
  24                 	set regbase, 0x1000
  25                 	set porta, 0x0
  26                 	set tcnt, 0x0e
  27                 	set toc2, 0x18
  28                 	set tctl1, 0x20
  29                 	set tmsk1, 0x22
  30                 	set tflg1, 0x23
  31                 	
  32                 	set highTicks, 600             ; 300 us
  33                 	set lowTicks, 1400             ; 700 us
  34                 	
  35                 	set toggle, 0x40
  36                 	set oc2, 0x40
  37                 	set clear, 0x40
  38                 	set set, 0x40
  39                 	
  40                 	set jmpOpcode, 0x7e
  41                 	set toc2JT, 0xdc                 ; toc2 jump table address
  42                 	
  43                 	 ; useful subroutines
  44                 	set OUTA, 0xffb8
  45                 	set OUT1BSP, 0xffbe
  46                 	set OUT2BSP, 0xffc1
  47                 	set OUTCRLF, 0xffc4
  48                 	
  49                 	_start: 
  50                 	
  51 0000 0E          	         cli
  52                 	
  53 0001 CE 10 00    	         ldx #regbase              
  54                 	
  55 0004 1C 00 40    	         bset porta,x oc2        ; set OC2 pin to high (PA6)     
  56                 	
  57 0007 18 CE 00 DC 	         ldy #toc2JT             ; put "jmp wInterrupt" in the jump table for OC2
M68HC11 GAS  wave.s 			page 2


  58 000b 86 7E       	         ldaa #jmpOpcode
  59 000d 18 A7 00    	         staa 0,y
  60 0010 CC 00 00    	         ldd #wInterrupt
  61 0013 18 ED 01    	         std 1,y
  62                 	
  63 0016 86 40       	         ldaa #toggle            ; set successful compare action to toggle (pp 365)    
  64 0018 A7 20       	         staa tctl1,x          
  65                 	    
  66 001a EC 0E       	         ldd tcnt,x              ; toggle OC2 pin after 300 us
  67 001c C3 02 58    	         addd #highTicks
  68 001f ED 18       	         std toc2,x
  69                 	
  70 0021 86 40       	         ldaa #oc2               ; clear OC2F (pp 348)
  71 0023 A7 23       	         staa tflg1,x
  72 0025 86 40       	         ldaa #oc2               ; set OC2I (mask)
  73 0027 AA 22       	         oraa tmsk1,x
  74 0029 A7 22       	         staa tmsk1,x
  75                 	
  76 002b 86 01       	         ldaa #0x1
  77 002d B7 00 00    	         staa isHigh
  78                 	
  79                 	
  80                 	loop:    
  81 0030 7E 00 00    	         jmp loop                ; endless loop
  82                 	
  83                 	end:     
  84 0033 3F          	         swi
  85                 	
  86                 	;---------------------------------------------
  87                 	; Behaviour: 
  88                 	;     checks the isHigh varibable.
  89                 	;     if the isHigh
  90                 	; Assumptions:
  91                 	;     isHigh is a byte variable that exists
  92                 	; Restriction:
  93                 	;     none
  94                 	; Register and Memory Usage:
  95                 	;    Precondition:
  96                 	;    Postcondition:
  97                 	;        
  98                 	;    Destroys:
  99                 	;---------------------------------------------
 100                 	wInterrupt: ; the wave interrupt:
 101 0034 B6 00 00    	         ldaa isHigh ; if(isHigh) goto setLow 
 102 0037 81 01       	         cmpa #0x1
 103 0039 27 12       	         beq setLow
 104                 	
 105                 	setHigh:
 106 003b 86 01       	         ldaa #0x1
 107 003d B7 00 00    	         staa isHigh
 108                 	
 109 0040 CE 10 00    	         ldx #regbase            ; toggle OC2 pin after 300 us
 110 0043 EC 0E       	         ldd tcnt,x
 111 0045 C3 02 58    	         addd #highTicks
 112 0048 ED 18       	         std toc2,x
 113 004a 7E 00 00    	         jmp afterSet
 114                 	
M68HC11 GAS  wave.s 			page 3


 115                 	setLow: ;set the timing to low
 116 004d 86 00       	         ldaa #0x0
 117 004f B7 00 00    	         staa isHigh
 118                 	
 119 0052 CE 10 00    	         ldx #regbase
 120 0055 EC 0E       	         ldd tcnt,x              ; toggle OC2 pin after 700 um
 121 0057 C3 05 78    	         addd #lowTicks
 122 005a ED 18       	         std toc2,x
 123                 	
 124                 	afterSet: 
 125 005c 86 40       	         ldaa #clear             ; clear OC2F (pp 348)
 126 005e A7 23       	         staa tflg1,x
 127                 	
 128 0060 3B          	         rti
 129                 	
 130                 	;-----------------------------------------
 131                 	;         Data Area
 132                 	;-----------------------------------------
 133 0061 00          	isHigh: .byte 0x0 ; is 1 if the previous jump was set high, 0 otherwise
 134                 	
 135                 	#set up dummy frame pointer
 136                 	.global _.frame
 137                 	_.frame: .word
 138                 	
 139                 	.end
M68HC11 GAS  wave.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 wave.s
              wave.s:0      .text:0000000000000000 L0F0
              wave.s:49     .text:0000000000000000 _start
              wave.s:24     *ABS*:0000000000001000 regbase
              wave.s:25     *ABS*:0000000000000000 porta
              wave.s:26     *ABS*:000000000000000e tcnt
              wave.s:27     *ABS*:0000000000000018 toc2
              wave.s:28     *ABS*:0000000000000020 tctl1
              wave.s:29     *ABS*:0000000000000022 tmsk1
              wave.s:30     *ABS*:0000000000000023 tflg1
              wave.s:32     *ABS*:0000000000000258 highTicks
              wave.s:33     *ABS*:0000000000000578 lowTicks
              wave.s:35     *ABS*:0000000000000040 toggle
              wave.s:36     *ABS*:0000000000000040 oc2
              wave.s:37     *ABS*:0000000000000040 clear
              wave.s:38     *ABS*:0000000000000040 set
              wave.s:40     *ABS*:000000000000007e jmpOpcode
              wave.s:41     *ABS*:00000000000000dc toc2JT
              wave.s:44     *ABS*:000000000000ffb8 OUTA
              wave.s:45     *ABS*:000000000000ffbe OUT1BSP
              wave.s:46     *ABS*:000000000000ffc1 OUT2BSP
              wave.s:47     *ABS*:000000000000ffc4 OUTCRLF
              wave.s:51     .text:0000000000000000 L0L0
              wave.s:53     .text:0000000000000001 L0L1
              wave.s:55     .text:0000000000000004 L0L2
              wave.s:57     .text:0000000000000007 L0L3
              wave.s:58     .text:000000000000000b L0L4
              wave.s:59     .text:000000000000000d L0L5
              wave.s:60     .text:0000000000000010 L0L6
              wave.s:100    .text:0000000000000034 wInterrupt
              wave.s:61     .text:0000000000000013 L0L7
              wave.s:63     .text:0000000000000016 L0L8
              wave.s:64     .text:0000000000000018 L0L9
              wave.s:66     .text:000000000000001a L0L10
              wave.s:67     .text:000000000000001c L0L11
              wave.s:68     .text:000000000000001f L0L12
              wave.s:70     .text:0000000000000021 L0L13
              wave.s:71     .text:0000000000000023 L0L14
              wave.s:72     .text:0000000000000025 L0L15
              wave.s:73     .text:0000000000000027 L0L16
              wave.s:74     .text:0000000000000029 L0L17
              wave.s:76     .text:000000000000002b L0L18
              wave.s:77     .text:000000000000002d L0L19
              wave.s:133    .text:0000000000000061 isHigh
              wave.s:80     .text:0000000000000030 loop
              wave.s:81     .text:0000000000000030 L0L20
              wave.s:83     .text:0000000000000033 end
              wave.s:84     .text:0000000000000033 L0L21
              wave.s:101    .text:0000000000000034 L0L22
              wave.s:102    .text:0000000000000037 L0L23
              wave.s:103    .text:0000000000000039 L0L24
              wave.s:115    .text:000000000000004d setLow
              wave.s:105    .text:000000000000003b setHigh
              wave.s:106    .text:000000000000003b L0L25
              wave.s:107    .text:000000000000003d L0L26
              wave.s:109    .text:0000000000000040 L0L27
M68HC11 GAS  wave.s 			page 5


              wave.s:110    .text:0000000000000043 L0L28
              wave.s:111    .text:0000000000000045 L0L29
              wave.s:112    .text:0000000000000048 L0L30
              wave.s:113    .text:000000000000004a L0L31
              wave.s:124    .text:000000000000005c afterSet
              wave.s:116    .text:000000000000004d L0L32
              wave.s:117    .text:000000000000004f L0L33
              wave.s:119    .text:0000000000000052 L0L34
              wave.s:120    .text:0000000000000055 L0L35
              wave.s:121    .text:0000000000000057 L0L36
              wave.s:122    .text:000000000000005a L0L37
              wave.s:125    .text:000000000000005c L0L38
              wave.s:126    .text:000000000000005e L0L39
              wave.s:128    .text:0000000000000060 L0L40
              wave.s:137    .text:0000000000000062 _.frame

NO UNDEFINED SYMBOLS
