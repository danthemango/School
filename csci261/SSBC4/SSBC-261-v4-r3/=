EDITOR=vim
aliasFile=~/.bash_aliases

#ensure aliases file is loaded
if [ -f $aliasFile ]; then
   . $aliasFile
fi

l()
{
   cd ~/csci260/Lab$1
}

cdp()
{
   cd ~/csci265/phase$1
}

op()
{
   cd ~/csci265/phase$1
   vi -S Session.vim
}

commit()
{
   # ensure an argument was given
   if [[ -z $1 ]]; then
      echo usage: $FUNCNAME commit-message
      return
   fi

   git add -u
   git commit -m "$1"
   git push
}

#swap two files
swap()
{
   # ensure two files were provided
   if [[ $# -ne 2 ]]; then
      echo usage: swap file1 file2
   fi
   
   # ensure arguments provided were files
   if [[ ! -f $1 || ! -f $2 ]]; then
      echo $1 or $2 is not a file
      return
   fi

   #ensure backup directory exists
   if [[ ! -d ~/tmp ]]; then
      (mkdir tmp) || return
   fi

   # swap the files
   mv $1 ~/tmp/tmp
   mv $2 $1
   mv ~/tmp/tmp $2
}

#back up a file
backup()
{
   # ensure valid file was given
   if [[ $# -ne 1 || ! -f $1 ]]; then
      echo usage backup file
   fi

   #ensure backup directory exists
   if [[ ! -d ~/tmp/backup ]]; then
      (mkdir -p ~/tmp/backup) || return
   fi

   cp $1 ~/tmp/backup/$1
}

#cd and mkdir
mkcdir()
{
   mkdir $1 && cd $1
}

#prepare a task for the ssbc
sprep()
{
   #ensure task file exists
   if [[ ! -f ~/csci261/tasks/$1 ]]; then
      echo file $1 not found 
      return 
   fi
   
   # back up mac
   if [[ ! -d ~/csci261/tasks ]]; then
      mkdir -p ~/csci261/tasks
   fi

   cp ~/csci261/SSBC4/SSBC-261-v4-r3/mac ~/csci261/tasks/backup

   # move task to position
   if [[ -d ~/csci261/SSBC4/SSBC-261-v4-r3 ]]; then
      cp ~/csci261/tasks/$1 ~/csci261/SSBC4/SSBC-261-v4-r3/mac
   fi
}
